{"version":3,"sources":["hooks/useUnsplashAPI.js","hooks/useLocalStorage.js","components/greeting/Greeting.js","components/search/SearchCard.js","hooks/useComponentVisible.js","components/search/SearchForm.js","hooks/useOpenWeatherAPI.js","components/forecast/ForecastItem.js","components/forecast/Forecast.js","components/weather/Weather.js","components/todo/TodoItem.js","components/todo/Todos.js","components/todo/TodoToggle.js","components/location/ImageLocation.js","components/quote/Quote.js","components/ContainerOverlay.js","components/BackgroundImage.js","hooks/useTodoShow.js","App.js","index.js"],"names":["useUnsplashAPI","searchTerm","hour","Date","getHours","setTerm","imageURL","useState","url","location","user","links","liked_by_user","color","imageData","setImageData","useEffect","a","axios","get","response","console","log","data","urls","regular","name","html","getImages","useLocalStorage","key","defaultValue","stored","localStorage","getItem","initial","JSON","parse","value","setValue","setItem","stringify","Greeting","salutation","greeting","setGreeting","time","setTime","focus","setFocus","nameRef","useRef","focusRef","setUser","isFocusEmpty","setIsFocusEmpty","setTimeout","className","id","format","innerRef","onChange","e","target","SearchCard","setIcon","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useComponentVisible","class","onClick","googleIcon","data-icon","icon","yahooIcon","bingIcon","SearchForm","showCard","setShowcard","showSearchForm","setShowSearchForm","btnValue","setBtnValue","query","setQuery","searchString","setSearchString","formAction","setFormAction","clearInput","getPriorSearch","useCallback","searchURL","action","method","onSubmit","preventDefault","alert","type","placeholder","autoComplete","searchStr","useOpenWeatherAPI","temp","cityName","dayOfWeek","description","dt","currentWeather","forecastData","long","lat","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","ForecastItem","forecast","day","dayName","getDay","weather","Math","round","max","min","Forecast","showForecast","map","fc","href","Weather","setShowForecast","TodoItem","todos","todo","isComplete","index","setTodos","splice","Todos","showTodoCard","focusInput","item","inputValue","setInputValue","showTodos","setShowTodos","img","createElement","todoBtn","querySelector","isColorLight","tinycolor","isLight","darkerColor","darken","toString","style","background","crossOrigin","src","setTodoBtn","div","autoFocus","TodoToggle","setShowTodoCard","ImageLocation","isLiked","setIsLiked","imageLocation","city","country","setImageLocation","Quote","quoteUrl","author","setAuthor","quote","setQuote","fetch","json","contents","quotes","dailyQuote","ContainerOverlay","BackgroundImage","body","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundPosition","backgroundSize","useTodoShow","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03f05837.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useUnsplashAPI = () => {\r\n\r\n    const setTerm = () => {\r\n        let term\r\n        const today = new Date(),\r\n         hour = today.getHours()\r\n        \r\n        if(hour < 12 ){\r\n             term = `morning sun`\r\n        }else if(hour < 18){\r\n            term = `green forest`\r\n        }else{\r\n            term = `starry night sky`\r\n        }\r\n        return term\r\n    }\r\n\r\n    const searchTerm = setTerm()\r\n\r\n    const imageURL = `/api/background?query=${searchTerm}&per_page=1&orientation=landscape`\r\n\r\n    const [imageData, setImageData ] = useState({\r\n        url: \"\",\r\n        location: {},\r\n        user: \"\",\r\n        links: \"\",\r\n        liked_by_user: false,\r\n        color: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        async function getImages(){\r\n            const response = await axios.get(imageURL)\r\n            console.log(response)\r\n            const { urls, location, user, links, liked_by_user, color } = await response.data\r\n    \r\n            setImageData({\r\n                url: urls.regular,\r\n                location: location,\r\n                user: user.name,\r\n                links: links.html,\r\n                liked_by_user:false,\r\n                color: color\r\n            })\r\n        }\r\n    getImages()\r\n\r\n    }, [imageData.user, imageData.url, imageURL])\r\n    \r\n    return [imageData]\r\n}\r\n\r\nexport default useUnsplashAPI\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n\r\n  const stored = localStorage.getItem(key);\r\n  const initial = stored ? JSON.parse(stored) : defaultValue;\r\n  const [value, setValue] = useState(initial);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useLocalStorage } from '../../hooks/useLocalStorage'\r\nimport Moment from 'react-moment'\r\nimport '../../css/greeting.css'\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\nconst Greeting = () => {\r\n\r\nconst [greeting, setGreeting] = useState(\"\")\r\nconst [time, setTime] = useState(new Date())\r\nconst [focus, setFocus] = useLocalStorage(\"focus\", \"Learn all the things\")\r\n\r\nconst nameRef = useRef();\r\nconst focusRef = useRef();\r\nconst[user, setUser] = useLocalStorage(\"username\", \"Amy\")\r\n\r\nconst [isFocusEmpty, setIsFocusEmpty] = useState(true)\r\n\r\n    let salutation\r\n    let today = new Date(),\r\n    hour = today.getHours()\r\n\r\n    if(hour < 12 ){\r\n        salutation = 'Good morning,'\r\n    }else if (hour < 18){\r\n        salutation = 'Good afternoon,'\r\n    }else{\r\n        salutation = 'Good evening,'\r\n    }\r\n\r\n    //const stored = localStorage.getItem(\"user\");\r\n\r\n    useEffect(()=> {\r\n        setTimeout( () => setTime(new Date()), 1000)\r\n        setGreeting(salutation) \r\n    },[greeting, focus, user, time, salutation])\r\n    \r\n    const handleNameChange = (e) => {\r\n        const html = e.target.value\r\n        setUser(html)        \r\n    }\r\n\r\n    const handleFocusChange = (e) => {\r\n        const html = e.target.value\r\n\r\n        if(html === \"\"){\r\n            setIsFocusEmpty(true)\r\n        }else{\r\n            setIsFocusEmpty(false)\r\n        }\r\n        setFocus(html)        \r\n    }\r\n\r\n    return (\r\n        <div className=\"greeting-container\">\r\n             <Moment id=\"time\" format=\"h:mm\">{time}</Moment>\r\n            <div className=\"greeting-content\">\r\n                <div className=\"greeting-limit\">\r\n                    <h1 className=\"greeting\">{greeting}</h1>\r\n                    <ContentEditable\r\n                        innerRef={nameRef}\r\n                        className=\"name\"\r\n                        html={user}\r\n                        onChange={handleNameChange}\r\n                    />\r\n                </div>\r\n\r\n                <h2 className=\"focus-q\">What is your main focus today?</h2>\r\n                <ContentEditable\r\n                    innerRef={focusRef}\r\n                    className={isFocusEmpty ? \"focus show-line\" : \"focus\"}\r\n                    html={focus}\r\n                    onChange={handleFocusChange}\r\n                />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React from 'react'\r\nimport { Icon } from \"@iconify/react\"\r\nimport googleIcon from \"@iconify/icons-simple-icons/google\"\r\nimport bingIcon from \"@iconify/icons-simple-icons/bing\"\r\nimport yahooIcon from \"@iconify/icons-simple-icons/yahoo\"\r\nimport useComponentVisible from '../../hooks/useComponentVisible'\r\nimport '../../css/search.css'\r\n\r\nconst SearchCard = ({ setIcon }) => {\r\n\r\n    const { ref, isComponentVisible } = useComponentVisible(true)\r\n\r\n    return (\r\n       <> \r\n            {isComponentVisible && <div ref={ref} class=\"search-links-card \">\r\n                <ul class=\"search-links-list\">\r\n                    <p>Search With</p>\r\n                    <li className=\"link google\" onClick={()=> setIcon(googleIcon)}><Icon className=\"google\" data-icon=\"simple-icons:google\" icon={googleIcon} /><span>Google</span></li>\r\n                    <li className=\"link yahoo\" onClick={()=> setIcon(yahooIcon)}><Icon className= \"yahoo\" data-icon=\"simple-icons:yahoo\" icon={yahooIcon} /><span>Yahoo</span></li>\r\n                    <li className=\"link google\" onClick={()=> setIcon(bingIcon)}><Icon className= \"bing\" data-icon=\"simple-icons:bing\" icon={bingIcon} /><span>Bing</span></li>\r\n                </ul>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchCard\r\n","\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\n/*Referenced from Paul Fitzgerald Stackoverflow*/\r\nexport default function useComponentVisible(initialIsVisible) {\r\n    const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\r\n    const ref = useRef(null);\r\n\r\n    const handleClickOutside = (event) => {\r\n     \r\n        if (ref.current && !ref.current.contains(event.target) && isComponentVisible){\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    return { ref, isComponentVisible, setIsComponentVisible };\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport SearchCard from './SearchCard'\r\nimport { Icon } from \"@iconify/react\"\r\nimport { useLocalStorage } from '../../hooks/useLocalStorage'\r\nimport googleIcon from \"@iconify/icons-simple-icons/google\"\r\nimport bingIcon from \"@iconify/icons-simple-icons/bing\"\r\nimport yahooIcon from \"@iconify/icons-simple-icons/yahoo\"\r\nimport '../../css/search.css'\r\n\r\nconst SearchForm = () => {\r\n    const [showCard, setShowcard] = useState(false)\r\n    const [showSearchForm, setShowSearchForm] = useState(false)\r\n    const [btnValue, setBtnValue] = useState(\"\")\r\n \r\n    const [query, setQuery] = useState(\"\")\r\n    const [icon, setIcon] = useLocalStorage(\"icon\", {}) \r\n    const [searchString, setSearchString] = useState(\"\")\r\n    const [formAction, setFormAction] = useState(\"\")\r\n\r\n    const clearInput = useRef(null)\r\n\r\n    const getPriorSearch = useCallback(() => {\r\n        setSearchString(localStorage.getItem('search'))\r\n        let searchURL =`${searchString}${query}`\r\n        setFormAction(searchURL)\r\n    }, [query, searchString])\r\n\r\n    useEffect(()=> {\r\n        getPriorSearch()\r\n    },[getPriorSearch])\r\n   \r\n    const handleSubmit = (e) => {\r\n  \r\n        if(localStorage.getItem('search') === '' || localStorage.getItem('search') === null){\r\n            e.preventDefault()\r\n            alert(\"Please select a search engine.\")\r\n            setShowSearchForm(true)\r\n            return false;\r\n        }\r\n        console.log(clearInput.current.value)\r\n    }\r\n\r\n    const toggleForm = () =>{\r\n        setShowSearchForm(!showSearchForm)\r\n        if (showCard) setShowcard(false)\r\n    }\r\n\r\n    const onClick = (e) => {\r\n\r\n        let searchURL\r\n        let searchStr\r\n        \r\n        if(icon === googleIcon){\r\n            setBtnValue(`form-engine-btn google`)\r\n            searchStr = `http://www.google.com/search?q=`\r\n            setSearchString(localStorage.setItem('search', searchStr))\r\n            searchURL =`${searchStr}${query}`\r\n            setFormAction(searchURL)\r\n        } \r\n        else if(icon === yahooIcon){\r\n            setBtnValue(`form-engine-btn yahoo`)\r\n            searchStr = `http://www.yahoo.com/search?q=`\r\n            setSearchString(localStorage.setItem('search', searchStr) )\r\n            searchURL =`${searchStr}${query}`\r\n            setFormAction(searchURL)\r\n        } \r\n        else if(icon === bingIcon){\r\n            setBtnValue(`form-engine-btn bing`)\r\n            searchStr = `http://www.bing.com/search?q=`\r\n            setSearchString(localStorage.setItem('search', searchStr))\r\n            searchURL =`${searchStr}${query}`\r\n            setFormAction(searchURL)\r\n        } \r\n        else{\r\n            getPriorSearch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"search-wrap\">\r\n        <div className=\"search-container\">\r\n            <div className=\"search-form-container\">\r\n                <div className=\"search-title\">\r\n                    <p>Links</p>\r\n                    <span className=\"search-icon\"><i className=\"fas fa-search\" onClick={toggleForm}></i></span>\r\n                </div>\r\n            \r\n                <form action ={formAction}  method = \"GET\" className={showSearchForm ? 'search-form show' : 'search-form'} onSubmit={handleSubmit}>\r\n                    <input \r\n                        type=\"text\" \r\n                        ref={clearInput} \r\n                        className=\"search-input\" \r\n                        name= \"q\" value={query} \r\n                        placeholder=\"\" \r\n                        onChange={(e)=>setQuery(e.target.value)}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <span className=\"search-arrow\">\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"search-submit-btn\" \r\n                            onClick={onClick}><Icon className={btnValue} \r\n                            icon={icon} \r\n                        /></button>\r\n                        <i className=\"arrow down\"  onClick={()=>setShowcard(!showCard)}></i>\r\n                    </span>\r\n                </form>\r\n            </div>\r\n            {showCard && <SearchCard setBtnValue={setBtnValue} setIcon={setIcon}/>}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useOpenWeatherAPI = () => {\r\n\r\n    const [currentWeather, setCurrentWeather] = useState({\r\n        temp: 0,\r\n        cityName: \"\",\r\n        dayOfWeek: \"\",\r\n        description: \"\",\r\n        id: \"\",\r\n        dt: 0\r\n    })\r\n  \r\n    const [forecastData, setForecastData] = useState([])\r\n  \r\n    useEffect(() => {\r\n        let long, lat\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition\r\n            (position => {\r\n                long = position.coords.longitude\r\n                lat = position.coords.latitude\r\n\r\n                let weatherUrl =  `/api/temperature?lat=${lat}&lon=${long}&units=imperial&`\r\n\r\n                async function getWeather(){\r\n                    \r\n                    let response = await fetch(weatherUrl)\r\n              \r\n                    const data = await response.json()\r\n              \r\n                    const { current } = await data\r\n            \r\n                    let date = new Date(current.dt * 1000);\r\n                    let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n  \r\n                    let cityName = await formatCityName(data.timezone)\r\n\r\n                    function formatCityName(city){\r\n                        let c =  city.substring(data.timezone.indexOf('/')+1)\r\n                        if(c.includes(\"_\")){\r\n                            c = c.replace(\"_\", \" \") \r\n                            return c\r\n                        }\r\n                        return c\r\n                    }\r\n                   \r\n                    setCurrentWeather({\r\n                        temp: await current.temp,\r\n                        dayOfWeek: days[date.getDay()],\r\n                        cityName: cityName,\r\n                        description: await current.weather[0].description,\r\n                        id: await current.weather[0].id,\r\n                        dt: await current.dt\r\n                    })\r\n\r\n                    const { daily } = await data\r\n                    const dailyForecast = [...daily]\r\n                    dailyForecast.splice(5, 3)\r\n                    setForecastData(dailyForecast)\r\n                    \r\n                }\r\n       \r\n               //getWeather()\r\n            })\r\n         }\r\n    }, [currentWeather, forecastData])\r\n      \r\n    return [currentWeather, forecastData]\r\n\r\n}\r\n  \r\nexport default useOpenWeatherAPI","import React from 'react'\r\nimport '../../css/weather-icons.css'\r\n\r\nconst ForecastItem = ({ forecast, day }) => {\r\n\r\n    let date = new Date(day * 1000)\r\n    let days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat']\r\n    let dayName = days[date.getDay()]\r\n\r\n    return (\r\n        <div className=\"forecast-item\">\r\n            <span className=\"forecast-day\">{dayName}</span>\r\n            <i className={`wi wi-owm-${forecast.weather[0].id}`}></i>\r\n            <div className=\"forecast-hilo\">\r\n                <span className=\"forecast-hi\">\r\n                    <span className=\"forecast-hi-degree\">{Math.round(forecast.temp.max)}&#176;</span>\r\n                    <span className=\"forecast-hi-symbol\"></span>\r\n                </span>\r\n                <span className=\"forecast-lo\">\r\n                    <span className=\"forecast-lo-degree\">{Math.round(forecast.temp.min)}&#176;</span>\r\n                    <span className=\"forecast-lo-symbol\"></span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForecastItem\r\n","\r\nimport useOpenWeatherAPI from '../../hooks/useOpenWeatherAPI'\r\nimport ForecastItem from './ForecastItem'\r\nimport '../../css/forecast.css'\r\nimport '../../css/weather-icons.css'\r\n\r\nconst Forecast = ({ showForecast }) => {\r\n\r\n    const [currentWeather, forecastData] = useOpenWeatherAPI()\r\n\r\n    return (\r\n        <div className={!showForecast ? 'forecast-card-container' : 'forecast-card-container show'  }>\r\n            <div className=\"forecast-current\">\r\n                <div className=\"forecast-current-info\">\r\n                    <div className=\"forecast-current-title\">\r\n                        <h1 className=\"forecast-current-city\">{currentWeather.cityName}</h1>\r\n                        <p className=\"forecast-current-day\">{currentWeather.dayOfWeek}</p>\r\n                    </div>\r\n                    <div className=\"forecast-current-temp\">\r\n                        <i id=\"forecast-current-icon\" className={`wi wi-owm-${currentWeather.id}`}></i>\r\n                        <div className=\"forecast-current-toggle\">\r\n                            <h2 className=\"forecast-current-degree\">{Math.round(currentWeather.temp)}&#176;</h2>\r\n                            <span className=\"forecast-current-span\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"forecast-current-description\">{currentWeather.description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"forecast-five\">\r\n               {forecastData.map(fc => (\r\n                   <ForecastItem key={fc.dt} forecast={fc} day={fc.dt} /> \r\n                ))}\r\n            </div>\r\n            <div className=\"forecast-links\">\r\n                <a href=\"!#\">\r\n                    More Weather <i className=\"fas fa-arrow-circle-right\"></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forecast\r\n","\r\nimport useOpenWeatherAPI from '../../hooks/useOpenWeatherAPI'\r\nimport '../../css/weather.css'\r\nimport '../../css/weather-icons.css'\r\n\r\nconst Weather = ({ showForecast, setShowForecast }) => {\r\n\r\n    const [currentWeather] = useOpenWeatherAPI()\r\n\r\n    /*const [temperature, setTemperature] = useState(currentWeather.temp)\r\n    const [isCelcius, setIsCelcius] = useState(false)\r\n\r\n        let celcius = (temperature - 32) / 1.8 \r\n        if(isCelcius)setTemperature(celcius)\r\n        <h2 className=\"temperature-degree\" onClick={()=>setIsCelcius(!isCelcius)}>{Math.round(temperature)}&#176;</h2>\r\n        \r\n        */\r\n    \r\n\r\n    return (\r\n        <div className=\"temperature-container\">\r\n            <div className=\"temperature\">\r\n                <div className=\"temperature-section\">\r\n                    <i className={`wi wi-owm-${currentWeather.id}`}></i>\r\n                    <h2 className=\"temperature-degree\">{Math.round(currentWeather.temp)}</h2>\r\n                    <span></span>\r\n                </div>\r\n                <h1 className=\"temperature-city\" onClick={()=>setShowForecast(!showForecast)}>{currentWeather.cityName}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather","import React from 'react'\r\n\r\nconst TodoItem = ({ todos, todo, isComplete, index, setTodos }) => {\r\n\r\n    const completeTodo = () => {\r\n        if(isComplete === false){\r\n            todos[index].isComplete = true\r\n        }\r\n        else{\r\n            todos[index].isComplete = false\r\n        }\r\n        setTodos([...todos])\r\n        console.log(todos)\r\n    }\r\n\r\n    const deleteTodo = () => {\r\n        todos.splice(index, 1)\r\n        setTodos([...todos])\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-div\">\r\n           <li className={isComplete ? 'todo-item completed' : 'todo-item'}>{todo}</li>\r\n            {todo && \r\n                <button className={isComplete ? 'complete-btn show' : 'complete-btn'} onClick={completeTodo}>\r\n                    <i className=\"fas fa-check\"></i>\r\n                </button>\r\n            }\r\n            {todo &&\r\n                <button className=\"delete-btn\" onClick={deleteTodo}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport useUnsplashAPI from '../../hooks/useUnsplashAPI'\r\nimport { useLocalStorage } from '../../hooks/useLocalStorage'\r\nimport tinycolor from 'tinycolor2'\r\nimport '../../css/todo.css'\r\n\r\nconst Todos = ({ showTodoCard }) => {\r\n\r\n    const focusInput = useRef(null)\r\n\r\n    const [imageData] = useUnsplashAPI()\r\n    const [todos, setTodos] = useLocalStorage(\"todos\",[{ item: \"\", isComplete: \"false\"}])\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [showTodos, setShowTodos] = useState(false)\r\n    \r\n    /*const [todos, setTodos] = useState([\r\n        {\r\n          item: \"\",\r\n          isComplete: \"false\"\r\n        }\r\n    ])*/\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setTodos([...todos, { item: inputValue }])\r\n        setInputValue(\"\")\r\n        console.log(todos)\r\n    }\r\n\r\n    const setTodoBtn = (color, url) => {  //imageData.color\r\n        const img = document.createElement(\"img\")\r\n        let todoBtn = document.querySelector('.todo-btn-center')\r\n        \r\n        let clr = tinycolor(color);\r\n        let isColorLight =  clr.isLight(); \r\n        let darkerColor = tinycolor(`${color}`).darken(10).toString(); \r\n\r\n            if(isColorLight){\r\n                todoBtn.style.background = `${darkerColor}`\r\n            }else{\r\n                todoBtn.style.background = `${color}`\r\n            }\r\n    \r\n        img.crossOrigin = 'Anonymous';\r\n        img.src = `${url}`\r\n    }\r\n\r\n    const onClick = () => {\r\n        setShowTodos(true)\r\n       // focusInput.current.focus()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(focusInput.current){\r\n            focusInput.current.focus()\r\n        }\r\n        setTodoBtn(imageData.color, imageData.url)\r\n      \r\n    },[imageData.color, imageData.url, focusInput])\r\n\r\n    return (\r\n        <div div className={!showTodoCard ? 'todo-card-container hide' : 'todo-card-container'}>\r\n            <h2>Today</h2>\r\n            <div className={!showTodos ? 'todo-card-center': 'todo-card-center hide'} >\r\n                <p>Add a todo to get started</p>\r\n                <button className=\"todo-btn-center\" onClick={onClick}>New Todo</button>\r\n            </div>\r\n            <div className={showTodos ? 'todos-container show' : 'todos-container'}>\r\n                <ul className=\"todos-list\">\r\n                    {todos.map((todo, index) => (\r\n                        <TodoItem  key={index} todo={todo.item}  isComplete={todo.isComplete} index={index} todos={todos} setTodos={setTodos}/>\r\n                    ))} \r\n                </ul>\r\n                    \r\n                <form onSubmit={onSubmit}>\r\n                    <input type=\"text\" ref={focusInput} className=\"todo-input\" placeholder=\"Enter New Todo\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} autoFocus />\r\n                </form>\r\n            </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import React from 'react'\r\nimport '../../css/todo.css'\r\n\r\nconst TodoToggle = ({ showTodoCard, setShowTodoCard }) => {\r\n    const onClick = () => {\r\n        setShowTodoCard(!showTodoCard)\r\n        console.log(\"You clicked the todo toggle\")\r\n        console.log(showTodoCard)\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-toggle\" onClick={onClick}>Todo</div>\r\n    )\r\n}\r\n\r\nexport default TodoToggle\r\n","import React, { useState } from 'react'\r\nimport useUnsplashAPI from '../../hooks/useUnsplashAPI'\r\nimport '../../css/location.css'\r\n\r\nconst ImageLocation = () => {\r\n\r\n    const [imageData] = useUnsplashAPI()\r\n\r\n    const [isLiked, setIsLiked] = useState (false)\r\n\r\n    const setImageLocation = (location) => {\r\n\r\n        const { city, country} = location\r\n        let imageLocation\r\n        \r\n        if (city === null && country === null){\r\n            return imageLocation = 'Somewhere, Universe'\r\n        }\r\n        else if(city === null){\r\n            return imageLocation = `${country}`\r\n        }\r\n        else if(country === null){\r\n            return imageLocation = `${city}`\r\n        }\r\n        else{\r\n           return imageLocation = `${city}, ${country}`\r\n        }\r\n    }\r\n\r\n    const imageLocation = setImageLocation(imageData.location)\r\n\r\n    return (\r\n        <div className=\"geo-container\">\r\n            <div className=\"image-credit\">\r\n                <a href={imageData.links}  className=\"image-photographer\">{imageData.user}</a>\r\n                <span className=\"image-like\" onClick={()=>setIsLiked(!isLiked)}><i className={!isLiked ? 'far fa-heart' : 'fas fa-heart'}></i></span>\r\n            </div>\r\n            <div className=\"image-location\">{imageLocation}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLocation\r\n","import React, { useState, useEffect } from 'react'\r\nimport '../../css/quote.css'\r\n\r\nconst Quote = () => {\r\n    \r\n    const quoteUrl = \"https://quotes.rest/qod?category=inspire\"\r\n    //const quoteUrl = `/api/quotes?category=inspire`\r\n    const [author, setAuthor] = useState(\"\")\r\n    const [quote, setQuote] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        async function dailyQuote(){\r\n            let response = await fetch(quoteUrl)\r\n            let data = await response.json()\r\n           \r\n            setQuote(data.contents.quotes[0].quote)\r\n            setAuthor(data.contents.quotes[0].author)\r\n        }\r\n        dailyQuote()\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"quote-container\">\r\n            <div id=\"quote\">{quote}</div>\r\n            <div id=\"author\">{author}</div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Quote\r\n","import React, { useState } from 'react'\r\nimport useUnsplashAPI from '../hooks/useUnsplashAPI'\r\nimport Greeting from '../components/greeting/Greeting'\r\nimport SearchForm from '../components/search/SearchForm'\r\nimport Forecast from '../components/forecast/Forecast'\r\nimport Weather from '../components/weather/Weather'\r\nimport Todos from '../components/todo/Todos'\r\nimport TodoToggle from '../components/todo/TodoToggle'\r\nimport ImageLocation from '../components/location/ImageLocation'\r\nimport Quote from '../components/quote/Quote'\r\nimport tinycolor from 'tinycolor2'\r\nimport '../index.css'\r\n\r\nconst ContainerOverlay = ({ showTodoCard, setShowTodoCard }) => {\r\n\r\n    const [ imageData ] = useUnsplashAPI()\r\n    const [ showForecast, setShowForecast ] = useState(false)\r\n\r\n    let clr = tinycolor(imageData.color)\r\n    let isColorLight =  clr.isLight() \r\n\r\n    return (\r\n        <>\r\n            <div className= {isColorLight ? 'container bg-darken' : 'container'}>\r\n                <div className=\"one\">\r\n                    <SearchForm />\r\n                </div>\r\n                <div className=\"two\">\r\n                    <Greeting />\r\n                </div>\r\n                <div className=\"three\">\r\n                    <Weather showForecast={showForecast} setShowForecast={setShowForecast}/>\r\n                    <Forecast showForecast={showForecast}/>\r\n                    <Todos showTodoCard={showTodoCard} />\r\n                </div>\r\n\r\n                <div className= \"four\">\r\n                    <ImageLocation />\r\n                    <Quote />\r\n                    <TodoToggle showTodoCard={showTodoCard}  setShowTodoCard={setShowTodoCard} />\r\n                </div>\r\n            </div>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContainerOverlay\r\n","\r\nimport useUnsplashAPI from '../hooks/useUnsplashAPI'\r\n\r\nconst BackgroundImage = () => {\r\n\r\n    const [ imageData ] = useUnsplashAPI()\r\n\r\n    function setBg(url){\r\n        let today = new Date(),\r\n        hour = today.getHours()\r\n    \r\n        if(hour){\r\n            document.body.style.backgroundImage = `url(${url})`\r\n            document.body.style.backgroundRepeat = \"no-repeat\"\r\n            document.body.style.backgroundAttachment= \"fixed\"\r\n            document.body.style.backgroundPosition= \"center\"\r\n            document.body.style.backgroundSize = \"cover\"\r\n        }\r\n    }\r\n\r\nsetBg(imageData.url)\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackgroundImage\r\n","import { useState } from 'react'\r\n\r\nconst useTodoShow = () => {\r\n    \r\n    const [showTodoCard, setShowTodoCard ] = useState(false)\r\n    return [showTodoCard, setShowTodoCard]\r\n    \r\n}\r\n\r\nexport default useTodoShow\r\n","\nimport ContainerOverlay from './components/ContainerOverlay'\nimport BackgroundImage from './components/BackgroundImage'\nimport useTodoShow from './hooks/useTodoShow'\n\nconst App = () => {\n  const [showTodoCard, setShowTodoCard] = useTodoShow()\n  return (\n    <>\n      <BackgroundImage />\n      <ContainerOverlay showTodoCard={showTodoCard} setShowTodoCard={setShowTodoCard} />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}